import spotipy
from spotipy.oauth2 import SpotifyOAuth
from openai import OpenAI

# --- API Keys ---
OPENAI_API_KEY = #####give your api key#####
SPOTIFY_CLIENT_ID = "3ca186056b594a49aefc670d5c21f076"
SPOTIFY_CLIENT_SECRET = "e99df17f819046e982c2835b527df32b"
REDIRECT_URI = "http://127.0.0.1:8888/callback"
SCOPE = "playlist-modify-public playlist-modify-private"

# âœ… Scopes for playback + playlist
SCOPE = "user-modify-playback-state user-read-playback-state playlist-modify-public playlist-modify-private"

# âœ… Initialize OpenAI client
client = OpenAI(api_key=OPENAI_API_KEY)

# âœ… Initialize Spotify client
sp = spotipy.Spotify(auth_manager=SpotifyOAuth(
    client_id=SPOTIFY_CLIENT_ID,
    client_secret=SPOTIFY_CLIENT_SECRET,
    redirect_uri=REDIRECT_URI,
    scope=SCOPE
))


def analyze_request(user_request):
    """Ask OpenAI to suggest songs based on user request"""
    prompt = f"Suggest 10 songs for this playlist request: {user_request}. " \
             f"Return only song title - artist in each line."

    response = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": prompt}]
    )

    return response.choices[0].message.content


def create_and_play_playlist(user_request):
    """Create playlist on Spotify, add songs, and play them"""
    parsed = analyze_request(user_request)
    print("\nðŸŽµ AI Suggested Songs:\n", parsed)

    # Create playlist
    user_id = sp.me()["id"]
    playlist = sp.user_playlist_create(
        user=user_id,
        name=user_request,
        public=True,
        description="Generated by AI DJ "
    )

    track_ids = []
    for line in parsed.split("\n"):
        if "-" in line:
            song, artist = line.split("-", 1)
            query = f"{song.strip()} {artist.strip()}"
        else:
            query = line.strip()

        result = sp.search(q=query, type="track", limit=1)
        tracks = result.get("tracks", {}).get("items", [])
        if tracks:
            track_ids.append(tracks[0]["id"])

    if track_ids:
        sp.playlist_add_items(playlist["id"], track_ids)
        print(f"\n Playlist '{user_request}' created in your Spotify! ")

        # --- Playback on phone if available ---
        devices = sp.devices()
        if not devices["devices"]:
            print("âš  No active Spotify device found. Open Spotify on your phone and try again.")
            return

        phone_device = None
        for d in devices["devices"]:
            if d["type"].lower() == "smartphone":
                phone_device = d["id"]
                break

        if phone_device:
            device_id = phone_device
            print(" Found phone, will play there!")
        else:
            # fallback â†’ first available device
            device_id = devices["devices"][0]["id"]
            print(f" No phone found, playing on: {devices['devices'][0]['name']}")

        sp.start_playback(device_id=device_id, context_uri=playlist["uri"])
        print(f" Playing playlist '{user_request}' ")

    else:
        print(" No tracks found.")


if __name__ == "__main__":
    req = input("What kind of playlist do you want? ")
    create_and_play_playlist(req)
